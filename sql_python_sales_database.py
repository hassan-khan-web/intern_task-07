{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "58273f99-5799-43ee-b6d2-cc5b546c4407",
   "metadata": {},
   "outputs": [],
   "source": [
    "import sqlite3\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "conn = sqlite3.connect('sales_data.db')\n",
    "cursor = conn.cursor()\n",
    "cursor.execute('''\n",
    "CREATE TABLE IF NOT EXISTS sales_data (\n",
    "     id INTEGER PRIMARY KEY AUTOINCREMENT,\n",
    "      product TEXT,\n",
    "      quantity INTEGER,\n",
    "      price REAL\n",
    "   )\n",
    "    ''')\n",
    "conn.commit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b78b5a3a-e219-43c7-a479-143d36dbbe08",
   "metadata": {},
   "outputs": [],
   "source": [
    "sales_data = [\n",
    "    ('Product A', 10, 20.5),\n",
    "    ('Product B', 5, 15.0),\n",
    "    ('Product A', 7, 20.5),\n",
    "    ('Product C', 3, 30.0),\n",
    "    ('Product B', 8, 15.0),\n",
    "    ('Product C', 4, 30.0)\n",
    "]\n",
    "\n",
    "cursor.executemany(' INSERT INTO sales_data (product, quantity, price) VALUES (?, ?, ?) ', sales_data)\n",
    "conn.commit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "79fddf34-9812-44e9-aed8-2275a3d9587e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   TOTAL_QTY  REVENUE    product\n",
      "0         17    348.5  Product A\n",
      "1         13    195.0  Product B\n",
      "2          7    210.0  Product C\n"
     ]
    }
   ],
   "source": [
    "query = \"SELECT SUM(quantity) as TOTAL_QTY, SUM(quantity * price) as REVENUE, product from sales_data GROUP BY product\"\n",
    "df = pd.read_sql_query(query, conn)\n",
    "\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8e62eab2-eea0-404c-a1b8-c3d4ddccd1ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (8, 5))\n",
    "sns.barplot(x=\"product\", y=\"REVENUE\", hue=\"product\", data=df, palette=\"coolwarm\", legend=False)\n",
    "plt.xticks(rotation=45)\n",
    "plt.title(\"Revenue of the products\")\n",
    "plt.savefig(\"revenue_bar_chart.png\")\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
